// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dataflow.proto

/*
Package dataflow is a generated protocol buffer package.

It is generated from these files:
	dataflow.proto

It has these top-level messages:
	Schedule
	Policy
	GetPolicyRequest
	GetPolicyResponse
	ListPolicyRequest
	ListPolicyResponse
	CreatePolicyRequest
	CreatePolicyResponse
	UpdatePolicyRequest
	UpdatePolicyResponse
	DeletePolicyRequest
	DeletePolicyResponse
	KV
	Filter
	Connector
	Plan
	CreatePlanRequest
	CreatePlanResponse
	GetPlanRequest
	GetPlanResponse
	ListPlanRequest
	ListPlanResponse
	UpdatePlanRequest
	UpdatePlanResponse
	DeletePlanRequest
	DeletePlanResponse
	RunPlanRequest
	RunPlanResponse
	Job
	GetJobRequest
	GetJobResponse
	ListJobRequest
	ListJobResponse
*/
package dataflow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Schedule struct {
	Type             string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	TiggerProperties string `protobuf:"bytes,2,opt,name=tiggerProperties" json:"tiggerProperties,omitempty"`
}

func (m *Schedule) Reset()                    { *m = Schedule{} }
func (m *Schedule) String() string            { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()               {}
func (*Schedule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Schedule) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Schedule) GetTiggerProperties() string {
	if m != nil {
		return m.TiggerProperties
	}
	return ""
}

type Policy struct {
	Id          string    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string    `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	TenantId    string    `protobuf:"bytes,3,opt,name=tenantId" json:"tenantId,omitempty"`
	Description string    `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Schedule    *Schedule `protobuf:"bytes,5,opt,name=schedule" json:"schedule,omitempty"`
}

func (m *Policy) Reset()                    { *m = Policy{} }
func (m *Policy) String() string            { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()               {}
func (*Policy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Policy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Policy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Policy) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *Policy) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Policy) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

type GetPolicyRequest struct {
	Context string `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *GetPolicyRequest) Reset()                    { *m = GetPolicyRequest{} }
func (m *GetPolicyRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPolicyRequest) ProtoMessage()               {}
func (*GetPolicyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetPolicyRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *GetPolicyRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetPolicyResponse struct {
	Err    string  `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	Policy *Policy `protobuf:"bytes,2,opt,name=policy" json:"policy,omitempty"`
}

func (m *GetPolicyResponse) Reset()                    { *m = GetPolicyResponse{} }
func (m *GetPolicyResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPolicyResponse) ProtoMessage()               {}
func (*GetPolicyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetPolicyResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *GetPolicyResponse) GetPolicy() *Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

type ListPolicyRequest struct {
	Context string `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
}

func (m *ListPolicyRequest) Reset()                    { *m = ListPolicyRequest{} }
func (m *ListPolicyRequest) String() string            { return proto.CompactTextString(m) }
func (*ListPolicyRequest) ProtoMessage()               {}
func (*ListPolicyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListPolicyRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

type ListPolicyResponse struct {
	Err      string    `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	Policies []*Policy `protobuf:"bytes,2,rep,name=policies" json:"policies,omitempty"`
}

func (m *ListPolicyResponse) Reset()                    { *m = ListPolicyResponse{} }
func (m *ListPolicyResponse) String() string            { return proto.CompactTextString(m) }
func (*ListPolicyResponse) ProtoMessage()               {}
func (*ListPolicyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListPolicyResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *ListPolicyResponse) GetPolicies() []*Policy {
	if m != nil {
		return m.Policies
	}
	return nil
}

type CreatePolicyRequest struct {
	Context string  `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Policy  *Policy `protobuf:"bytes,2,opt,name=policy" json:"policy,omitempty"`
}

func (m *CreatePolicyRequest) Reset()                    { *m = CreatePolicyRequest{} }
func (m *CreatePolicyRequest) String() string            { return proto.CompactTextString(m) }
func (*CreatePolicyRequest) ProtoMessage()               {}
func (*CreatePolicyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreatePolicyRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *CreatePolicyRequest) GetPolicy() *Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

type CreatePolicyResponse struct {
	Err    string  `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	Policy *Policy `protobuf:"bytes,2,opt,name=policy" json:"policy,omitempty"`
}

func (m *CreatePolicyResponse) Reset()                    { *m = CreatePolicyResponse{} }
func (m *CreatePolicyResponse) String() string            { return proto.CompactTextString(m) }
func (*CreatePolicyResponse) ProtoMessage()               {}
func (*CreatePolicyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CreatePolicyResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *CreatePolicyResponse) GetPolicy() *Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

type UpdatePolicyRequest struct {
	Context  string `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	PolicyId string `protobuf:"bytes,2,opt,name=policyId" json:"policyId,omitempty"`
	Body     string `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
}

func (m *UpdatePolicyRequest) Reset()                    { *m = UpdatePolicyRequest{} }
func (m *UpdatePolicyRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdatePolicyRequest) ProtoMessage()               {}
func (*UpdatePolicyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdatePolicyRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *UpdatePolicyRequest) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

func (m *UpdatePolicyRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type UpdatePolicyResponse struct {
	Err    string  `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	Policy *Policy `protobuf:"bytes,2,opt,name=policy" json:"policy,omitempty"`
}

func (m *UpdatePolicyResponse) Reset()                    { *m = UpdatePolicyResponse{} }
func (m *UpdatePolicyResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdatePolicyResponse) ProtoMessage()               {}
func (*UpdatePolicyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UpdatePolicyResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *UpdatePolicyResponse) GetPolicy() *Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

type DeletePolicyRequest struct {
	Context string `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *DeletePolicyRequest) Reset()                    { *m = DeletePolicyRequest{} }
func (m *DeletePolicyRequest) String() string            { return proto.CompactTextString(m) }
func (*DeletePolicyRequest) ProtoMessage()               {}
func (*DeletePolicyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DeletePolicyRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *DeletePolicyRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeletePolicyResponse struct {
	Err string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
}

func (m *DeletePolicyResponse) Reset()                    { *m = DeletePolicyResponse{} }
func (m *DeletePolicyResponse) String() string            { return proto.CompactTextString(m) }
func (*DeletePolicyResponse) ProtoMessage()               {}
func (*DeletePolicyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DeletePolicyResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type KV struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *KV) Reset()                    { *m = KV{} }
func (m *KV) String() string            { return proto.CompactTextString(m) }
func (*KV) ProtoMessage()               {}
func (*KV) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *KV) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KV) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Filter struct {
	Prefix string `protobuf:"bytes,1,opt,name=prefix" json:"prefix,omitempty"`
	Tag    []*KV  `protobuf:"bytes,2,rep,name=tag" json:"tag,omitempty"`
}

func (m *Filter) Reset()                    { *m = Filter{} }
func (m *Filter) String() string            { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()               {}
func (*Filter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Filter) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *Filter) GetTag() []*KV {
	if m != nil {
		return m.Tag
	}
	return nil
}

type Connector struct {
	StorType   string `protobuf:"bytes,1,opt,name=storType" json:"storType,omitempty"`
	BucketName string `protobuf:"bytes,2,opt,name=bucketName" json:"bucketName,omitempty"`
	ConnConfig []*KV  `protobuf:"bytes,3,rep,name=connConfig" json:"connConfig,omitempty"`
}

func (m *Connector) Reset()                    { *m = Connector{} }
func (m *Connector) String() string            { return proto.CompactTextString(m) }
func (*Connector) ProtoMessage()               {}
func (*Connector) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Connector) GetStorType() string {
	if m != nil {
		return m.StorType
	}
	return ""
}

func (m *Connector) GetBucketName() string {
	if m != nil {
		return m.BucketName
	}
	return ""
}

func (m *Connector) GetConnConfig() []*KV {
	if m != nil {
		return m.ConnConfig
	}
	return nil
}

type Plan struct {
	Id            string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name          string     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description   string     `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Type          string     `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	PolicyId      string     `protobuf:"bytes,5,opt,name=policyId" json:"policyId,omitempty"`
	PolicyName    string     `protobuf:"bytes,6,opt,name=policyName" json:"policyName,omitempty"`
	SourceConn    *Connector `protobuf:"bytes,7,opt,name=sourceConn" json:"sourceConn,omitempty"`
	DestConn      *Connector `protobuf:"bytes,8,opt,name=destConn" json:"destConn,omitempty"`
	Filter        *Filter    `protobuf:"bytes,9,opt,name=filter" json:"filter,omitempty"`
	RemainSource  bool       `protobuf:"varint,10,opt,name=remainSource" json:"remainSource,omitempty"`
	TenantId      string     `protobuf:"bytes,11,opt,name=tenantId" json:"tenantId,omitempty"`
	UserId        string     `protobuf:"bytes,12,opt,name=userId" json:"userId,omitempty"`
	PolicyEnabled bool       `protobuf:"varint,13,opt,name=policyEnabled" json:"policyEnabled,omitempty"`
}

func (m *Plan) Reset()                    { *m = Plan{} }
func (m *Plan) String() string            { return proto.CompactTextString(m) }
func (*Plan) ProtoMessage()               {}
func (*Plan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Plan) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Plan) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Plan) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Plan) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Plan) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

func (m *Plan) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

func (m *Plan) GetSourceConn() *Connector {
	if m != nil {
		return m.SourceConn
	}
	return nil
}

func (m *Plan) GetDestConn() *Connector {
	if m != nil {
		return m.DestConn
	}
	return nil
}

func (m *Plan) GetFilter() *Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *Plan) GetRemainSource() bool {
	if m != nil {
		return m.RemainSource
	}
	return false
}

func (m *Plan) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *Plan) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Plan) GetPolicyEnabled() bool {
	if m != nil {
		return m.PolicyEnabled
	}
	return false
}

type CreatePlanRequest struct {
	Context string `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Plan    *Plan  `protobuf:"bytes,2,opt,name=plan" json:"plan,omitempty"`
}

func (m *CreatePlanRequest) Reset()                    { *m = CreatePlanRequest{} }
func (m *CreatePlanRequest) String() string            { return proto.CompactTextString(m) }
func (*CreatePlanRequest) ProtoMessage()               {}
func (*CreatePlanRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *CreatePlanRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *CreatePlanRequest) GetPlan() *Plan {
	if m != nil {
		return m.Plan
	}
	return nil
}

type CreatePlanResponse struct {
	Err  string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	Plan *Plan  `protobuf:"bytes,2,opt,name=plan" json:"plan,omitempty"`
}

func (m *CreatePlanResponse) Reset()                    { *m = CreatePlanResponse{} }
func (m *CreatePlanResponse) String() string            { return proto.CompactTextString(m) }
func (*CreatePlanResponse) ProtoMessage()               {}
func (*CreatePlanResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *CreatePlanResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *CreatePlanResponse) GetPlan() *Plan {
	if m != nil {
		return m.Plan
	}
	return nil
}

type GetPlanRequest struct {
	Context string `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *GetPlanRequest) Reset()                    { *m = GetPlanRequest{} }
func (m *GetPlanRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPlanRequest) ProtoMessage()               {}
func (*GetPlanRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *GetPlanRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *GetPlanRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetPlanResponse struct {
	Err  string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	Plan *Plan  `protobuf:"bytes,2,opt,name=plan" json:"plan,omitempty"`
}

func (m *GetPlanResponse) Reset()                    { *m = GetPlanResponse{} }
func (m *GetPlanResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPlanResponse) ProtoMessage()               {}
func (*GetPlanResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *GetPlanResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *GetPlanResponse) GetPlan() *Plan {
	if m != nil {
		return m.Plan
	}
	return nil
}

type ListPlanRequest struct {
	Context  string            `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Limit    int32             `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Offset   int32             `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	SortKeys []string          `protobuf:"bytes,4,rep,name=sortKeys" json:"sortKeys,omitempty"`
	SortDirs []string          `protobuf:"bytes,5,rep,name=sortDirs" json:"sortDirs,omitempty"`
	Filter   map[string]string `protobuf:"bytes,6,rep,name=Filter" json:"Filter,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ListPlanRequest) Reset()                    { *m = ListPlanRequest{} }
func (m *ListPlanRequest) String() string            { return proto.CompactTextString(m) }
func (*ListPlanRequest) ProtoMessage()               {}
func (*ListPlanRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ListPlanRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *ListPlanRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListPlanRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListPlanRequest) GetSortKeys() []string {
	if m != nil {
		return m.SortKeys
	}
	return nil
}

func (m *ListPlanRequest) GetSortDirs() []string {
	if m != nil {
		return m.SortDirs
	}
	return nil
}

func (m *ListPlanRequest) GetFilter() map[string]string {
	if m != nil {
		return m.Filter
	}
	return nil
}

type ListPlanResponse struct {
	Plans []*Plan `protobuf:"bytes,1,rep,name=plans" json:"plans,omitempty"`
	Next  int32   `protobuf:"varint,2,opt,name=next" json:"next,omitempty"`
}

func (m *ListPlanResponse) Reset()                    { *m = ListPlanResponse{} }
func (m *ListPlanResponse) String() string            { return proto.CompactTextString(m) }
func (*ListPlanResponse) ProtoMessage()               {}
func (*ListPlanResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ListPlanResponse) GetPlans() []*Plan {
	if m != nil {
		return m.Plans
	}
	return nil
}

func (m *ListPlanResponse) GetNext() int32 {
	if m != nil {
		return m.Next
	}
	return 0
}

type UpdatePlanRequest struct {
	Context string `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	PlanId  string `protobuf:"bytes,2,opt,name=planId" json:"planId,omitempty"`
	Body    string `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
}

func (m *UpdatePlanRequest) Reset()                    { *m = UpdatePlanRequest{} }
func (m *UpdatePlanRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdatePlanRequest) ProtoMessage()               {}
func (*UpdatePlanRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *UpdatePlanRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *UpdatePlanRequest) GetPlanId() string {
	if m != nil {
		return m.PlanId
	}
	return ""
}

func (m *UpdatePlanRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type UpdatePlanResponse struct {
	Err  string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	Plan *Plan  `protobuf:"bytes,2,opt,name=plan" json:"plan,omitempty"`
}

func (m *UpdatePlanResponse) Reset()                    { *m = UpdatePlanResponse{} }
func (m *UpdatePlanResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdatePlanResponse) ProtoMessage()               {}
func (*UpdatePlanResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *UpdatePlanResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *UpdatePlanResponse) GetPlan() *Plan {
	if m != nil {
		return m.Plan
	}
	return nil
}

type DeletePlanRequest struct {
	Context string `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *DeletePlanRequest) Reset()                    { *m = DeletePlanRequest{} }
func (m *DeletePlanRequest) String() string            { return proto.CompactTextString(m) }
func (*DeletePlanRequest) ProtoMessage()               {}
func (*DeletePlanRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *DeletePlanRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *DeletePlanRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeletePlanResponse struct {
	Err string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
}

func (m *DeletePlanResponse) Reset()                    { *m = DeletePlanResponse{} }
func (m *DeletePlanResponse) String() string            { return proto.CompactTextString(m) }
func (*DeletePlanResponse) ProtoMessage()               {}
func (*DeletePlanResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *DeletePlanResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type RunPlanRequest struct {
	Context string `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *RunPlanRequest) Reset()                    { *m = RunPlanRequest{} }
func (m *RunPlanRequest) String() string            { return proto.CompactTextString(m) }
func (*RunPlanRequest) ProtoMessage()               {}
func (*RunPlanRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *RunPlanRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *RunPlanRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RunPlanResponse struct {
	Err   string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	JobId string `protobuf:"bytes,2,opt,name=jobId" json:"jobId,omitempty"`
}

func (m *RunPlanResponse) Reset()                    { *m = RunPlanResponse{} }
func (m *RunPlanResponse) String() string            { return proto.CompactTextString(m) }
func (*RunPlanResponse) ProtoMessage()               {}
func (*RunPlanResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *RunPlanResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *RunPlanResponse) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type Job struct {
	Id             string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type           string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	PlanName       string `protobuf:"bytes,3,opt,name=planName" json:"planName,omitempty"`
	PlanId         string `protobuf:"bytes,4,opt,name=planId" json:"planId,omitempty"`
	Description    string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	SourceLocation string `protobuf:"bytes,6,opt,name=sourceLocation" json:"sourceLocation,omitempty"`
	DestLocation   string `protobuf:"bytes,7,opt,name=destLocation" json:"destLocation,omitempty"`
	Status         string `protobuf:"bytes,8,opt,name=status" json:"status,omitempty"`
	CreateTime     int64  `protobuf:"varint,9,opt,name=createTime" json:"createTime,omitempty"`
	StartTime      int64  `protobuf:"varint,10,opt,name=startTime" json:"startTime,omitempty"`
	EndTime        int64  `protobuf:"varint,11,opt,name=endTime" json:"endTime,omitempty"`
	RemainSource   bool   `protobuf:"varint,12,opt,name=remainSource" json:"remainSource,omitempty"`
	TotalCapacity  int64  `protobuf:"varint,13,opt,name=totalCapacity" json:"totalCapacity,omitempty"`
	PassedCapacity int64  `protobuf:"varint,14,opt,name=passedCapacity" json:"passedCapacity,omitempty"`
	TotalCount     int64  `protobuf:"varint,15,opt,name=totalCount" json:"totalCount,omitempty"`
	PassedCount    int64  `protobuf:"varint,16,opt,name=passedCount" json:"passedCount,omitempty"`
	Progress       int64  `protobuf:"varint,17,opt,name=progress" json:"progress,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *Job) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Job) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Job) GetPlanName() string {
	if m != nil {
		return m.PlanName
	}
	return ""
}

func (m *Job) GetPlanId() string {
	if m != nil {
		return m.PlanId
	}
	return ""
}

func (m *Job) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Job) GetSourceLocation() string {
	if m != nil {
		return m.SourceLocation
	}
	return ""
}

func (m *Job) GetDestLocation() string {
	if m != nil {
		return m.DestLocation
	}
	return ""
}

func (m *Job) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Job) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Job) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *Job) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *Job) GetRemainSource() bool {
	if m != nil {
		return m.RemainSource
	}
	return false
}

func (m *Job) GetTotalCapacity() int64 {
	if m != nil {
		return m.TotalCapacity
	}
	return 0
}

func (m *Job) GetPassedCapacity() int64 {
	if m != nil {
		return m.PassedCapacity
	}
	return 0
}

func (m *Job) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *Job) GetPassedCount() int64 {
	if m != nil {
		return m.PassedCount
	}
	return 0
}

func (m *Job) GetProgress() int64 {
	if m != nil {
		return m.Progress
	}
	return 0
}

type GetJobRequest struct {
	Context string `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *GetJobRequest) Reset()                    { *m = GetJobRequest{} }
func (m *GetJobRequest) String() string            { return proto.CompactTextString(m) }
func (*GetJobRequest) ProtoMessage()               {}
func (*GetJobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *GetJobRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *GetJobRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetJobResponse struct {
	Err string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	Job *Job   `protobuf:"bytes,2,opt,name=job" json:"job,omitempty"`
}

func (m *GetJobResponse) Reset()                    { *m = GetJobResponse{} }
func (m *GetJobResponse) String() string            { return proto.CompactTextString(m) }
func (*GetJobResponse) ProtoMessage()               {}
func (*GetJobResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *GetJobResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *GetJobResponse) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type ListJobRequest struct {
	Context  string            `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Limit    int32             `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Offset   int32             `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	SortKeys []string          `protobuf:"bytes,4,rep,name=sortKeys" json:"sortKeys,omitempty"`
	SortDirs []string          `protobuf:"bytes,5,rep,name=sortDirs" json:"sortDirs,omitempty"`
	Filter   map[string]string `protobuf:"bytes,6,rep,name=Filter" json:"Filter,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ListJobRequest) Reset()                    { *m = ListJobRequest{} }
func (m *ListJobRequest) String() string            { return proto.CompactTextString(m) }
func (*ListJobRequest) ProtoMessage()               {}
func (*ListJobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *ListJobRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *ListJobRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListJobRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListJobRequest) GetSortKeys() []string {
	if m != nil {
		return m.SortKeys
	}
	return nil
}

func (m *ListJobRequest) GetSortDirs() []string {
	if m != nil {
		return m.SortDirs
	}
	return nil
}

func (m *ListJobRequest) GetFilter() map[string]string {
	if m != nil {
		return m.Filter
	}
	return nil
}

type ListJobResponse struct {
	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs" json:"jobs,omitempty"`
	Next int32  `protobuf:"varint,2,opt,name=next" json:"next,omitempty"`
}

func (m *ListJobResponse) Reset()                    { *m = ListJobResponse{} }
func (m *ListJobResponse) String() string            { return proto.CompactTextString(m) }
func (*ListJobResponse) ProtoMessage()               {}
func (*ListJobResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *ListJobResponse) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

func (m *ListJobResponse) GetNext() int32 {
	if m != nil {
		return m.Next
	}
	return 0
}

func init() {
	proto.RegisterType((*Schedule)(nil), "Schedule")
	proto.RegisterType((*Policy)(nil), "Policy")
	proto.RegisterType((*GetPolicyRequest)(nil), "GetPolicyRequest")
	proto.RegisterType((*GetPolicyResponse)(nil), "GetPolicyResponse")
	proto.RegisterType((*ListPolicyRequest)(nil), "ListPolicyRequest")
	proto.RegisterType((*ListPolicyResponse)(nil), "ListPolicyResponse")
	proto.RegisterType((*CreatePolicyRequest)(nil), "CreatePolicyRequest")
	proto.RegisterType((*CreatePolicyResponse)(nil), "CreatePolicyResponse")
	proto.RegisterType((*UpdatePolicyRequest)(nil), "UpdatePolicyRequest")
	proto.RegisterType((*UpdatePolicyResponse)(nil), "UpdatePolicyResponse")
	proto.RegisterType((*DeletePolicyRequest)(nil), "DeletePolicyRequest")
	proto.RegisterType((*DeletePolicyResponse)(nil), "DeletePolicyResponse")
	proto.RegisterType((*KV)(nil), "KV")
	proto.RegisterType((*Filter)(nil), "Filter")
	proto.RegisterType((*Connector)(nil), "Connector")
	proto.RegisterType((*Plan)(nil), "Plan")
	proto.RegisterType((*CreatePlanRequest)(nil), "CreatePlanRequest")
	proto.RegisterType((*CreatePlanResponse)(nil), "CreatePlanResponse")
	proto.RegisterType((*GetPlanRequest)(nil), "GetPlanRequest")
	proto.RegisterType((*GetPlanResponse)(nil), "GetPlanResponse")
	proto.RegisterType((*ListPlanRequest)(nil), "ListPlanRequest")
	proto.RegisterType((*ListPlanResponse)(nil), "ListPlanResponse")
	proto.RegisterType((*UpdatePlanRequest)(nil), "UpdatePlanRequest")
	proto.RegisterType((*UpdatePlanResponse)(nil), "UpdatePlanResponse")
	proto.RegisterType((*DeletePlanRequest)(nil), "DeletePlanRequest")
	proto.RegisterType((*DeletePlanResponse)(nil), "DeletePlanResponse")
	proto.RegisterType((*RunPlanRequest)(nil), "RunPlanRequest")
	proto.RegisterType((*RunPlanResponse)(nil), "RunPlanResponse")
	proto.RegisterType((*Job)(nil), "Job")
	proto.RegisterType((*GetJobRequest)(nil), "GetJobRequest")
	proto.RegisterType((*GetJobResponse)(nil), "GetJobResponse")
	proto.RegisterType((*ListJobRequest)(nil), "ListJobRequest")
	proto.RegisterType((*ListJobResponse)(nil), "ListJobResponse")
}

func init() { proto.RegisterFile("dataflow.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xdd, 0x6f, 0x13, 0x47,
	0x10, 0x8f, 0x7d, 0xb6, 0x63, 0x4f, 0x12, 0x7f, 0x8c, 0x1d, 0x74, 0x3d, 0x10, 0x8d, 0x16, 0x8a,
	0x22, 0xda, 0xae, 0x54, 0x40, 0xa2, 0xa0, 0x52, 0x84, 0xc2, 0x47, 0x43, 0x50, 0x15, 0x1d, 0x14,
	0xa9, 0x4f, 0xd5, 0xd9, 0xb7, 0x49, 0x0f, 0x2e, 0xb7, 0xee, 0xdd, 0xba, 0xe0, 0xb7, 0xaa, 0xaf,
	0x7d, 0xa8, 0xfa, 0xa7, 0xf5, 0x3f, 0xaa, 0xf6, 0xe3, 0xbe, 0x9d, 0x62, 0xa2, 0xaa, 0x6f, 0x37,
	0x5f, 0xbb, 0xb3, 0xb3, 0x33, 0xbf, 0x99, 0x3d, 0xe8, 0xfb, 0x9e, 0xf0, 0x4e, 0x42, 0xfe, 0x8e,
	0xce, 0x63, 0x2e, 0x38, 0x79, 0x0e, 0xdd, 0x97, 0xb3, 0x9f, 0x99, 0xbf, 0x08, 0x19, 0x22, 0xb4,
	0xc4, 0x72, 0xce, 0xec, 0xc6, 0x5e, 0x63, 0xbf, 0xe7, 0xaa, 0x6f, 0xbc, 0x09, 0x43, 0x11, 0x9c,
	0x9e, 0xb2, 0xf8, 0x38, 0xe6, 0x73, 0x16, 0x8b, 0x80, 0x25, 0x76, 0x53, 0xc9, 0x6b, 0x7c, 0xf2,
	0x57, 0x03, 0x3a, 0xc7, 0x3c, 0x0c, 0x66, 0x4b, 0xec, 0x43, 0x33, 0xf0, 0xcd, 0x42, 0xcd, 0xc0,
	0x97, 0x4b, 0x47, 0xde, 0x19, 0x33, 0xa6, 0xea, 0x1b, 0x1d, 0xe8, 0x0a, 0x16, 0x79, 0x91, 0x38,
	0xf4, 0x6d, 0x4b, 0xf1, 0x33, 0x1a, 0xf7, 0x60, 0xcb, 0x67, 0xc9, 0x2c, 0x0e, 0xe6, 0x22, 0xe0,
	0x91, 0xdd, 0x52, 0xe2, 0x22, 0x0b, 0x3f, 0x83, 0x6e, 0x62, 0x1c, 0xb7, 0xdb, 0x7b, 0x8d, 0xfd,
	0xad, 0x5b, 0x3d, 0x9a, 0x9e, 0xc4, 0xcd, 0x44, 0xe4, 0x1b, 0x18, 0x3e, 0x63, 0x42, 0x7b, 0xe5,
	0xb2, 0x5f, 0x16, 0x2c, 0x11, 0x68, 0xc3, 0xe6, 0x8c, 0x47, 0x82, 0xbd, 0x17, 0xc6, 0xc3, 0x94,
	0x34, 0x6e, 0x37, 0x53, 0xb7, 0xc9, 0x53, 0x18, 0x15, 0xac, 0x93, 0x39, 0x8f, 0x12, 0x86, 0x43,
	0xb0, 0x58, 0x1c, 0x1b, 0x53, 0xf9, 0x89, 0x9f, 0x42, 0x67, 0xae, 0x74, 0x94, 0xe9, 0xd6, 0xad,
	0x4d, 0x6a, 0x4c, 0x0c, 0x9b, 0x7c, 0x09, 0xa3, 0x17, 0x41, 0xb2, 0xae, 0x1b, 0xe4, 0x08, 0xb0,
	0xa8, 0x7e, 0xee, 0xbe, 0xd7, 0xa0, 0xab, 0x36, 0xd0, 0x97, 0x62, 0x15, 0x77, 0xce, 0x04, 0xe4,
	0x18, 0xc6, 0x07, 0x31, 0xf3, 0x04, 0x5b, 0x37, 0x08, 0x1f, 0x3c, 0xcd, 0x21, 0x4c, 0xca, 0x2b,
	0x5e, 0x3c, 0x30, 0x3f, 0xc1, 0xf8, 0x87, 0xb9, 0xff, 0x11, 0xce, 0x39, 0xe6, 0xc8, 0xcb, 0xc3,
	0xf4, 0x9e, 0x32, 0x5a, 0x26, 0xd9, 0x94, 0xfb, 0x4b, 0x93, 0x4c, 0xea, 0x5b, 0xfa, 0x5a, 0xde,
	0xe0, 0xe2, 0xbe, 0x3e, 0x84, 0xf1, 0x63, 0x16, 0xb2, 0xf5, 0x7d, 0xad, 0x66, 0xd3, 0x3e, 0x4c,
	0xca, 0x0b, 0x9c, 0xe7, 0x0b, 0xf9, 0x02, 0x9a, 0x47, 0xaf, 0x25, 0xff, 0x2d, 0x5b, 0xa6, 0xfc,
	0xb7, 0x6c, 0x89, 0x13, 0x68, 0xff, 0xea, 0x85, 0x8b, 0xb4, 0x8e, 0x34, 0x41, 0xee, 0x42, 0xe7,
	0x69, 0x10, 0x0a, 0x16, 0xe3, 0x25, 0xe8, 0xcc, 0x63, 0x76, 0x12, 0xbc, 0x37, 0x46, 0x86, 0xc2,
	0x5d, 0xb0, 0x84, 0x77, 0x6a, 0x72, 0xc4, 0xa2, 0x47, 0xaf, 0x5d, 0x49, 0x93, 0x10, 0x7a, 0x07,
	0x3c, 0x8a, 0xd8, 0x4c, 0xf0, 0x58, 0x46, 0x36, 0x11, 0x3c, 0x7e, 0x95, 0x23, 0x40, 0x46, 0xe3,
	0x55, 0x80, 0xe9, 0x62, 0xf6, 0x96, 0x89, 0xef, 0xf3, 0x22, 0x2e, 0x70, 0xf0, 0x1a, 0xc0, 0x8c,
	0x47, 0xd1, 0x01, 0x8f, 0x4e, 0x82, 0x53, 0xdb, 0xca, 0xb7, 0x29, 0xb0, 0xc9, 0x9f, 0x16, 0xb4,
	0x8e, 0x43, 0x2f, 0x5a, 0x0b, 0x1c, 0x2a, 0x00, 0x60, 0xd5, 0x01, 0x20, 0x45, 0xab, 0x56, 0x01,
	0xad, 0x8a, 0xd9, 0xd1, 0xae, 0x64, 0xc7, 0x55, 0x00, 0xfd, 0xad, 0xce, 0xd0, 0xd1, 0x67, 0xc8,
	0x39, 0x78, 0x13, 0x20, 0xe1, 0x8b, 0x78, 0xc6, 0x64, 0x48, 0xec, 0x4d, 0x95, 0x03, 0x40, 0xb3,
	0xf8, 0xb8, 0x05, 0x29, 0xde, 0x80, 0xae, 0xcf, 0x12, 0xa1, 0x34, 0xbb, 0x35, 0xcd, 0x4c, 0x26,
	0x73, 0xea, 0x44, 0xdd, 0x8c, 0xdd, 0x33, 0x39, 0xa5, 0x2f, 0xca, 0x35, 0x6c, 0x24, 0xb0, 0x1d,
	0xb3, 0x33, 0x2f, 0x88, 0x5e, 0xaa, 0xc5, 0x6d, 0xd8, 0x6b, 0xec, 0x77, 0xdd, 0x12, 0xaf, 0x84,
	0x93, 0x5b, 0x15, 0x9c, 0xbc, 0x04, 0x9d, 0x45, 0xc2, 0xe2, 0x43, 0xdf, 0xde, 0xd6, 0x17, 0xae,
	0x29, 0xbc, 0x0e, 0x3b, 0xfa, 0x68, 0x4f, 0x22, 0x6f, 0x1a, 0x32, 0xdf, 0xde, 0x51, 0x0b, 0x97,
	0x99, 0xe4, 0x3b, 0x18, 0x99, 0x42, 0x0e, 0xbd, 0xe8, 0xc3, 0xf9, 0xfc, 0x09, 0xb4, 0xe6, 0xa1,
	0x17, 0x99, 0xfa, 0x68, 0x53, 0x65, 0xa5, 0x58, 0xe4, 0x11, 0x60, 0x71, 0xa5, 0x73, 0x8b, 0xec,
	0x5f, 0x96, 0xb8, 0x0f, 0x7d, 0x89, 0xb5, 0x6b, 0x79, 0x52, 0xad, 0xac, 0x6f, 0x61, 0x90, 0xd9,
	0x5e, 0x64, 0xef, 0xdf, 0x9b, 0x30, 0x50, 0x88, 0xbb, 0xd6, 0xee, 0x13, 0x68, 0x87, 0xc1, 0x59,
	0x20, 0xd4, 0x4a, 0x6d, 0x57, 0x13, 0xf2, 0x2a, 0xf8, 0xc9, 0x49, 0xc2, 0x84, 0x4a, 0xd6, 0xb6,
	0x6b, 0x28, 0x55, 0x57, 0x3c, 0x16, 0x47, 0x6c, 0x99, 0xd8, 0xad, 0x3d, 0x4b, 0xd5, 0x95, 0xa1,
	0x53, 0xd9, 0xe3, 0x20, 0x4e, 0xec, 0x76, 0x2e, 0x93, 0x34, 0xde, 0x49, 0xab, 0xda, 0xee, 0xa8,
	0x7a, 0xba, 0x42, 0x2b, 0x1e, 0x9a, 0x5c, 0x7a, 0x12, 0x89, 0x78, 0xe9, 0x1a, 0x5d, 0xe7, 0x1e,
	0x6c, 0x15, 0xd8, 0xeb, 0x42, 0xc8, 0xfd, 0xe6, 0xd7, 0x0d, 0x72, 0x00, 0xc3, 0x7c, 0x07, 0x13,
	0xc5, 0xcb, 0xd0, 0x96, 0x01, 0x4a, 0xec, 0x86, 0xf2, 0xc1, 0x04, 0x4d, 0xf3, 0x54, 0xdd, 0xca,
	0xf0, 0xe8, 0x30, 0xa8, 0x6f, 0xf2, 0x23, 0x8c, 0x0c, 0xde, 0xae, 0x15, 0x4a, 0x09, 0x58, 0xa1,
	0x17, 0x65, 0x60, 0x6e, 0xa8, 0x95, 0x50, 0xfe, 0x08, 0xb0, 0xb8, 0xf4, 0x45, 0xee, 0xf9, 0x01,
	0x8c, 0x0c, 0x02, 0x5f, 0x28, 0xcd, 0x6e, 0x00, 0x16, 0xcd, 0xcf, 0x85, 0xef, 0xfb, 0xd0, 0x77,
	0x17, 0xd1, 0xc5, 0xf6, 0xb8, 0x07, 0x83, 0xcc, 0xf6, 0xdc, 0x23, 0x4e, 0xa0, 0xfd, 0x86, 0x4f,
	0xb3, 0xa8, 0x69, 0x82, 0xfc, 0xd1, 0x02, 0xeb, 0x39, 0x9f, 0xae, 0xc2, 0x57, 0x85, 0x94, 0xcd,
	0x0a, 0x52, 0x86, 0x5e, 0xa4, 0xb0, 0xd0, 0x0c, 0x5f, 0x29, 0x5d, 0xb8, 0x94, 0x56, 0xe9, 0x52,
	0x2a, 0x98, 0xdc, 0xae, 0x63, 0xf2, 0x0d, 0xe8, 0x6b, 0x94, 0x7c, 0xc1, 0x67, 0x9e, 0x52, 0xd2,
	0x38, 0x5b, 0xe1, 0x4a, 0xd8, 0x93, 0x18, 0x99, 0x69, 0x6d, 0x2a, 0xad, 0x12, 0x4f, 0x7a, 0x91,
	0x08, 0x4f, 0x2c, 0x12, 0x85, 0xb0, 0x3d, 0xd7, 0x50, 0x12, 0xc7, 0x67, 0x0a, 0x6a, 0x5e, 0x05,
	0x67, 0x4c, 0xe1, 0xaa, 0xe5, 0x16, 0x38, 0x78, 0x05, 0x7a, 0x89, 0xf0, 0x62, 0xa1, 0xc4, 0xa0,
	0xc4, 0x39, 0x43, 0x5e, 0x04, 0x8b, 0x7c, 0x25, 0xdb, 0x52, 0xb2, 0x94, 0xac, 0x41, 0xf1, 0xf6,
	0x0a, 0x28, 0xbe, 0x0e, 0x3b, 0x82, 0x0b, 0x2f, 0x3c, 0xf0, 0xe6, 0xde, 0x2c, 0x10, 0x4b, 0x05,
	0xab, 0x96, 0x5b, 0x66, 0xca, 0x28, 0xcc, 0xbd, 0x24, 0x61, 0x7e, 0xa6, 0xd6, 0x57, 0x6a, 0x15,
	0xae, 0x3c, 0x89, 0x36, 0xe4, 0x8b, 0x48, 0xd8, 0x03, 0x7d, 0x92, 0x9c, 0x23, 0xe3, 0x6d, 0x2c,
	0x94, 0xc2, 0x50, 0x29, 0x14, 0x59, 0xea, 0x16, 0x63, 0x7e, 0x1a, 0xb3, 0x24, 0xb1, 0x47, 0x4a,
	0x9c, 0xd1, 0xe4, 0x1e, 0xec, 0x3c, 0x63, 0xe2, 0x39, 0x9f, 0x7e, 0x7c, 0x0e, 0x6a, 0x28, 0x56,
	0xa6, 0xe7, 0xa6, 0xe0, 0x25, 0xb0, 0xde, 0xf0, 0xa9, 0x29, 0xb2, 0x16, 0x95, 0xca, 0x92, 0x41,
	0x7e, 0x6b, 0x42, 0x5f, 0xc2, 0xc8, 0x5a, 0x1b, 0xff, 0x3f, 0x48, 0x7a, 0xbb, 0x82, 0xa4, 0x97,
	0x69, 0xd9, 0xc1, 0xff, 0x1a, 0x48, 0x1f, 0xea, 0x66, 0x52, 0x8c, 0x9f, 0x0d, 0xad, 0x37, 0x7c,
	0x9a, 0xc2, 0xa8, 0x0e, 0x97, 0xe2, 0xac, 0x02, 0xd1, 0x5b, 0x7f, 0xb7, 0xa1, 0xfb, 0xd8, 0x13,
	0xde, 0xd3, 0x90, 0xbf, 0xc3, 0x3b, 0xd0, 0xcb, 0xde, 0x20, 0x38, 0xa2, 0xd5, 0xd7, 0x8c, 0x83,
	0xb4, 0xf6, 0x44, 0x21, 0x1b, 0x78, 0x17, 0x20, 0x7f, 0x42, 0x20, 0xd2, 0xda, 0xf3, 0xc3, 0x19,
	0xd3, 0xfa, 0x1b, 0x83, 0x6c, 0xe0, 0x03, 0xd8, 0x2e, 0x0e, 0xf7, 0x38, 0xa1, 0x2b, 0x5e, 0x0f,
	0xce, 0x2e, 0x5d, 0xf5, 0x02, 0xd0, 0xe6, 0xc5, 0x79, 0x1b, 0x27, 0x74, 0xc5, 0x7c, 0xef, 0xec,
	0xd2, 0x55, 0x43, 0xb9, 0x36, 0x2f, 0x8e, 0xc8, 0x38, 0xa1, 0x2b, 0x46, 0x6e, 0x67, 0x97, 0xae,
	0x9a, 0xa3, 0xc9, 0x06, 0x52, 0xd8, 0x34, 0x73, 0x00, 0x0e, 0x68, 0x79, 0x9a, 0x70, 0x86, 0xb4,
	0x32, 0x22, 0x90, 0x0d, 0xfc, 0x0a, 0xba, 0x69, 0xcb, 0xc3, 0x61, 0xb5, 0xbf, 0x3a, 0x23, 0x5a,
	0xed, 0x87, 0x3a, 0xb0, 0xf9, 0xa4, 0x83, 0x48, 0x6b, 0x03, 0x94, 0x33, 0xa6, 0xf5, 0x51, 0x48,
	0x1b, 0xe6, 0xed, 0x0b, 0x91, 0xd6, 0xda, 0xa4, 0x33, 0xa6, 0xf5, 0xfe, 0xa6, 0x0d, 0xf3, 0xae,
	0x83, 0x48, 0x6b, 0x1d, 0xcc, 0x19, 0xd3, 0x7a, 0x5b, 0x22, 0x1b, 0xf8, 0x39, 0x74, 0x74, 0x19,
	0x63, 0x9f, 0x96, 0xa0, 0xc0, 0x19, 0xd0, 0x72, 0x7d, 0xeb, 0xd0, 0x99, 0xa4, 0xc5, 0x41, 0xa5,
	0x3e, 0x9c, 0x21, 0xad, 0xe4, 0xb3, 0xd6, 0x37, 0x7d, 0x0a, 0x07, 0xb4, 0xdc, 0xed, 0x9c, 0x21,
	0xad, 0xb4, 0x30, 0xb2, 0x31, 0xed, 0xa8, 0xff, 0x0d, 0xb7, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff,
	0xec, 0x55, 0x92, 0x12, 0x81, 0x10, 0x00, 0x00,
}
