// Code generated by protoc-gen-go. DO NOT EDIT.
// source: s3.proto

/*
Package s3 is a generated protocol buffer package.

It is generated from these files:
	s3.proto

It has these top-level messages:
	ACL
	ServerSideEncryption
	VersioningConfiguration
	RedirectAllRequestsTo
	Redirect
	Condition
	RoutingRules
	WebsiteConfiguration
	CORSConfiguration
	Destination
	ReplicationRole
	ReplicationConfiguration
	Tag
	LifecycleFilter
	Action
	LifecycleRole
	ReplicationInfo
	Bucket
	Partion
	Version
	Object
	ListBucketsResponse
	BaseResponse
	BaseRequest
	ListObjectsRequest
	ListObjectResponse
	DeleteObjectInput
	GetObjectInput
	MultipartUpload
*/
package s3

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ACL struct {
	Canned       string   `protobuf:"bytes,1,opt,name=canned" json:"canned,omitempty"`
	FULL_CONTROL []string `protobuf:"bytes,2,rep,name=FULL_CONTROL,json=FULLCONTROL" json:"FULL_CONTROL,omitempty"`
	WRITE        []string `protobuf:"bytes,3,rep,name=WRITE" json:"WRITE,omitempty"`
	WRITE_ACP    []string `protobuf:"bytes,4,rep,name=WRITE_ACP,json=WRITEACP" json:"WRITE_ACP,omitempty"`
	READ         []string `protobuf:"bytes,5,rep,name=READ" json:"READ,omitempty"`
	READ_ACP     []string `protobuf:"bytes,6,rep,name=READ_ACP,json=READACP" json:"READ_ACP,omitempty"`
}

func (m *ACL) Reset()                    { *m = ACL{} }
func (m *ACL) String() string            { return proto.CompactTextString(m) }
func (*ACL) ProtoMessage()               {}
func (*ACL) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ACL) GetCanned() string {
	if m != nil {
		return m.Canned
	}
	return ""
}

func (m *ACL) GetFULL_CONTROL() []string {
	if m != nil {
		return m.FULL_CONTROL
	}
	return nil
}

func (m *ACL) GetWRITE() []string {
	if m != nil {
		return m.WRITE
	}
	return nil
}

func (m *ACL) GetWRITE_ACP() []string {
	if m != nil {
		return m.WRITE_ACP
	}
	return nil
}

func (m *ACL) GetREAD() []string {
	if m != nil {
		return m.READ
	}
	return nil
}

func (m *ACL) GetREAD_ACP() []string {
	if m != nil {
		return m.READ_ACP
	}
	return nil
}

type ServerSideEncryption struct {
	CryptScheme string `protobuf:"bytes,1,opt,name=cryptScheme" json:"cryptScheme,omitempty"`
	Algorithm   string `protobuf:"bytes,2,opt,name=algorithm" json:"algorithm,omitempty"`
	MasterKeyId string `protobuf:"bytes,3,opt,name=masterKeyId" json:"masterKeyId,omitempty"`
	Mandtory    bool   `protobuf:"varint,4,opt,name=mandtory" json:"mandtory,omitempty"`
}

func (m *ServerSideEncryption) Reset()                    { *m = ServerSideEncryption{} }
func (m *ServerSideEncryption) String() string            { return proto.CompactTextString(m) }
func (*ServerSideEncryption) ProtoMessage()               {}
func (*ServerSideEncryption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ServerSideEncryption) GetCryptScheme() string {
	if m != nil {
		return m.CryptScheme
	}
	return ""
}

func (m *ServerSideEncryption) GetAlgorithm() string {
	if m != nil {
		return m.Algorithm
	}
	return ""
}

func (m *ServerSideEncryption) GetMasterKeyId() string {
	if m != nil {
		return m.MasterKeyId
	}
	return ""
}

func (m *ServerSideEncryption) GetMandtory() bool {
	if m != nil {
		return m.Mandtory
	}
	return false
}

type VersioningConfiguration struct {
	Status    string `protobuf:"bytes,1,opt,name=Status" json:"Status,omitempty"`
	MfaDelete string `protobuf:"bytes,2,opt,name=MfaDelete" json:"MfaDelete,omitempty"`
}

func (m *VersioningConfiguration) Reset()                    { *m = VersioningConfiguration{} }
func (m *VersioningConfiguration) String() string            { return proto.CompactTextString(m) }
func (*VersioningConfiguration) ProtoMessage()               {}
func (*VersioningConfiguration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *VersioningConfiguration) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *VersioningConfiguration) GetMfaDelete() string {
	if m != nil {
		return m.MfaDelete
	}
	return ""
}

type RedirectAllRequestsTo struct {
	HostName string   `protobuf:"bytes,1,opt,name=hostName" json:"hostName,omitempty"`
	Protocol []string `protobuf:"bytes,2,rep,name=protocol" json:"protocol,omitempty"`
}

func (m *RedirectAllRequestsTo) Reset()                    { *m = RedirectAllRequestsTo{} }
func (m *RedirectAllRequestsTo) String() string            { return proto.CompactTextString(m) }
func (*RedirectAllRequestsTo) ProtoMessage()               {}
func (*RedirectAllRequestsTo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RedirectAllRequestsTo) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *RedirectAllRequestsTo) GetProtocol() []string {
	if m != nil {
		return m.Protocol
	}
	return nil
}

type Redirect struct {
	Protocol             string `protobuf:"bytes,1,opt,name=protocol" json:"protocol,omitempty"`
	HostName             string `protobuf:"bytes,2,opt,name=hostName" json:"hostName,omitempty"`
	ReplaceKeyPrefixWith string `protobuf:"bytes,3,opt,name=replaceKeyPrefixWith" json:"replaceKeyPrefixWith,omitempty"`
	ReplaceKeyWith       string `protobuf:"bytes,4,opt,name=replaceKeyWith" json:"replaceKeyWith,omitempty"`
	HttpRedirectCode     string `protobuf:"bytes,5,opt,name=httpRedirectCode" json:"httpRedirectCode,omitempty"`
}

func (m *Redirect) Reset()                    { *m = Redirect{} }
func (m *Redirect) String() string            { return proto.CompactTextString(m) }
func (*Redirect) ProtoMessage()               {}
func (*Redirect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Redirect) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *Redirect) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *Redirect) GetReplaceKeyPrefixWith() string {
	if m != nil {
		return m.ReplaceKeyPrefixWith
	}
	return ""
}

func (m *Redirect) GetReplaceKeyWith() string {
	if m != nil {
		return m.ReplaceKeyWith
	}
	return ""
}

func (m *Redirect) GetHttpRedirectCode() string {
	if m != nil {
		return m.HttpRedirectCode
	}
	return ""
}

type Condition struct {
	KeyPrefixEquals             string `protobuf:"bytes,1,opt,name=keyPrefixEquals" json:"keyPrefixEquals,omitempty"`
	HttpErrorCodeReturnedEquals string `protobuf:"bytes,2,opt,name=httpErrorCodeReturnedEquals" json:"httpErrorCodeReturnedEquals,omitempty"`
}

func (m *Condition) Reset()                    { *m = Condition{} }
func (m *Condition) String() string            { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()               {}
func (*Condition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Condition) GetKeyPrefixEquals() string {
	if m != nil {
		return m.KeyPrefixEquals
	}
	return ""
}

func (m *Condition) GetHttpErrorCodeReturnedEquals() string {
	if m != nil {
		return m.HttpErrorCodeReturnedEquals
	}
	return ""
}

type RoutingRules struct {
	Redirect  *Redirect  `protobuf:"bytes,1,opt,name=redirect" json:"redirect,omitempty"`
	Condition *Condition `protobuf:"bytes,2,opt,name=condition" json:"condition,omitempty"`
}

func (m *RoutingRules) Reset()                    { *m = RoutingRules{} }
func (m *RoutingRules) String() string            { return proto.CompactTextString(m) }
func (*RoutingRules) ProtoMessage()               {}
func (*RoutingRules) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *RoutingRules) GetRedirect() *Redirect {
	if m != nil {
		return m.Redirect
	}
	return nil
}

func (m *RoutingRules) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

type WebsiteConfiguration struct {
	IndexDocument         string                 `protobuf:"bytes,1,opt,name=indexDocument" json:"indexDocument,omitempty"`
	ErrorDocument         string                 `protobuf:"bytes,2,opt,name=errorDocument" json:"errorDocument,omitempty"`
	RedirectAllRequestsTo *RedirectAllRequestsTo `protobuf:"bytes,3,opt,name=redirectAllRequestsTo" json:"redirectAllRequestsTo,omitempty"`
	RoutingRules          []*RoutingRules        `protobuf:"bytes,4,rep,name=routingRules" json:"routingRules,omitempty"`
}

func (m *WebsiteConfiguration) Reset()                    { *m = WebsiteConfiguration{} }
func (m *WebsiteConfiguration) String() string            { return proto.CompactTextString(m) }
func (*WebsiteConfiguration) ProtoMessage()               {}
func (*WebsiteConfiguration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *WebsiteConfiguration) GetIndexDocument() string {
	if m != nil {
		return m.IndexDocument
	}
	return ""
}

func (m *WebsiteConfiguration) GetErrorDocument() string {
	if m != nil {
		return m.ErrorDocument
	}
	return ""
}

func (m *WebsiteConfiguration) GetRedirectAllRequestsTo() *RedirectAllRequestsTo {
	if m != nil {
		return m.RedirectAllRequestsTo
	}
	return nil
}

func (m *WebsiteConfiguration) GetRoutingRules() []*RoutingRules {
	if m != nil {
		return m.RoutingRules
	}
	return nil
}

type CORSConfiguration struct {
	Id             string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	AllowedMethods string `protobuf:"bytes,2,opt,name=allowedMethods" json:"allowedMethods,omitempty"`
	AllowedOrigins string `protobuf:"bytes,3,opt,name=allowedOrigins" json:"allowedOrigins,omitempty"`
	AllowedHeaders string `protobuf:"bytes,4,opt,name=allowedHeaders" json:"allowedHeaders,omitempty"`
	MaxAgeSeconds  string `protobuf:"bytes,5,opt,name=maxAgeSeconds" json:"maxAgeSeconds,omitempty"`
	ExposedHeaders string `protobuf:"bytes,6,opt,name=exposedHeaders" json:"exposedHeaders,omitempty"`
}

func (m *CORSConfiguration) Reset()                    { *m = CORSConfiguration{} }
func (m *CORSConfiguration) String() string            { return proto.CompactTextString(m) }
func (*CORSConfiguration) ProtoMessage()               {}
func (*CORSConfiguration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CORSConfiguration) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CORSConfiguration) GetAllowedMethods() string {
	if m != nil {
		return m.AllowedMethods
	}
	return ""
}

func (m *CORSConfiguration) GetAllowedOrigins() string {
	if m != nil {
		return m.AllowedOrigins
	}
	return ""
}

func (m *CORSConfiguration) GetAllowedHeaders() string {
	if m != nil {
		return m.AllowedHeaders
	}
	return ""
}

func (m *CORSConfiguration) GetMaxAgeSeconds() string {
	if m != nil {
		return m.MaxAgeSeconds
	}
	return ""
}

func (m *CORSConfiguration) GetExposedHeaders() string {
	if m != nil {
		return m.ExposedHeaders
	}
	return ""
}

type Destination struct {
	Bucket       string `protobuf:"bytes,1,opt,name=bucket" json:"bucket,omitempty"`
	StorageClass string `protobuf:"bytes,2,opt,name=storageClass" json:"storageClass,omitempty"`
}

func (m *Destination) Reset()                    { *m = Destination{} }
func (m *Destination) String() string            { return proto.CompactTextString(m) }
func (*Destination) ProtoMessage()               {}
func (*Destination) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Destination) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *Destination) GetStorageClass() string {
	if m != nil {
		return m.StorageClass
	}
	return ""
}

type ReplicationRole struct {
	Id          string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Prefix      string       `protobuf:"bytes,2,opt,name=prefix" json:"prefix,omitempty"`
	Enabled     bool         `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
	Destination *Destination `protobuf:"bytes,4,opt,name=destination" json:"destination,omitempty"`
}

func (m *ReplicationRole) Reset()                    { *m = ReplicationRole{} }
func (m *ReplicationRole) String() string            { return proto.CompactTextString(m) }
func (*ReplicationRole) ProtoMessage()               {}
func (*ReplicationRole) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ReplicationRole) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReplicationRole) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *ReplicationRole) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *ReplicationRole) GetDestination() *Destination {
	if m != nil {
		return m.Destination
	}
	return nil
}

type ReplicationConfiguration struct {
	Role  string             `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
	Rules []*ReplicationRole `protobuf:"bytes,2,rep,name=rules" json:"rules,omitempty"`
}

func (m *ReplicationConfiguration) Reset()                    { *m = ReplicationConfiguration{} }
func (m *ReplicationConfiguration) String() string            { return proto.CompactTextString(m) }
func (*ReplicationConfiguration) ProtoMessage()               {}
func (*ReplicationConfiguration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ReplicationConfiguration) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *ReplicationConfiguration) GetRules() []*ReplicationRole {
	if m != nil {
		return m.Rules
	}
	return nil
}

type Tag struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val" json:"val,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Tag) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Tag) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

type LifecycleFilter struct {
	Prefix string `protobuf:"bytes,1,opt,name=prefix" json:"prefix,omitempty"`
	Tags   []*Tag `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty"`
}

func (m *LifecycleFilter) Reset()                    { *m = LifecycleFilter{} }
func (m *LifecycleFilter) String() string            { return proto.CompactTextString(m) }
func (*LifecycleFilter) ProtoMessage()               {}
func (*LifecycleFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *LifecycleFilter) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *LifecycleFilter) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Action struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Day          string `protobuf:"bytes,2,opt,name=day" json:"day,omitempty"`
	DeleteMarker string `protobuf:"bytes,4,opt,name=deleteMarker" json:"deleteMarker,omitempty"`
}

func (m *Action) Reset()                    { *m = Action{} }
func (m *Action) String() string            { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()               {}
func (*Action) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Action) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Action) GetDay() string {
	if m != nil {
		return m.Day
	}
	return ""
}

func (m *Action) GetDeleteMarker() string {
	if m != nil {
		return m.DeleteMarker
	}
	return ""
}

type LifecycleRole struct {
	Id      string           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Status  string           `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Filter  *LifecycleFilter `protobuf:"bytes,3,opt,name=filter" json:"filter,omitempty"`
	Actions []*Action        `protobuf:"bytes,4,rep,name=actions" json:"actions,omitempty"`
}

func (m *LifecycleRole) Reset()                    { *m = LifecycleRole{} }
func (m *LifecycleRole) String() string            { return proto.CompactTextString(m) }
func (*LifecycleRole) ProtoMessage()               {}
func (*LifecycleRole) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *LifecycleRole) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LifecycleRole) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *LifecycleRole) GetFilter() *LifecycleFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *LifecycleRole) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

type ReplicationInfo struct {
	Status       string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Backend      string `protobuf:"bytes,2,opt,name=backend" json:"backend,omitempty"`
	StorageClass string `protobuf:"bytes,3,opt,name=storageClass" json:"storageClass,omitempty"`
}

func (m *ReplicationInfo) Reset()                    { *m = ReplicationInfo{} }
func (m *ReplicationInfo) String() string            { return proto.CompactTextString(m) }
func (*ReplicationInfo) ProtoMessage()               {}
func (*ReplicationInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ReplicationInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ReplicationInfo) GetBackend() string {
	if m != nil {
		return m.Backend
	}
	return ""
}

func (m *ReplicationInfo) GetStorageClass() string {
	if m != nil {
		return m.StorageClass
	}
	return ""
}

type Bucket struct {
	Name                     string                    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Owner                    string                    `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
	OwnerDisplayName         string                    `protobuf:"bytes,3,opt,name=ownerDisplayName" json:"ownerDisplayName,omitempty"`
	Acl                      *ACL                      `protobuf:"bytes,4,opt,name=acl" json:"acl,omitempty"`
	CreationDate             int64                     `protobuf:"varint,5,opt,name=creationDate" json:"creationDate,omitempty"`
	Transient                bool                      `protobuf:"varint,6,opt,name=transient" json:"transient,omitempty"`
	Deleted                  bool                      `protobuf:"varint,7,opt,name=deleted" json:"deleted,omitempty"`
	ServerSideEncryption     *ServerSideEncryption     `protobuf:"bytes,8,opt,name=serverSideEncryption" json:"serverSideEncryption,omitempty"`
	VersioningConfiguration  *VersioningConfiguration  `protobuf:"bytes,9,opt,name=versioningConfiguration" json:"versioningConfiguration,omitempty"`
	Backend                  string                    `protobuf:"bytes,10,opt,name=backend" json:"backend,omitempty"`
	WebsiteConfiguration     *WebsiteConfiguration     `protobuf:"bytes,11,opt,name=websiteConfiguration" json:"websiteConfiguration,omitempty"`
	Cors                     *CORSConfiguration        `protobuf:"bytes,12,opt,name=cors" json:"cors,omitempty"`
	ReplicationConfiguration *ReplicationConfiguration `protobuf:"bytes,13,opt,name=replicationConfiguration" json:"replicationConfiguration,omitempty"`
	LifecycleConfiguration   []*LifecycleRole          `protobuf:"bytes,14,rep,name=lifecycleConfiguration" json:"lifecycleConfiguration,omitempty"`
}

func (m *Bucket) Reset()                    { *m = Bucket{} }
func (m *Bucket) String() string            { return proto.CompactTextString(m) }
func (*Bucket) ProtoMessage()               {}
func (*Bucket) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *Bucket) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Bucket) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Bucket) GetOwnerDisplayName() string {
	if m != nil {
		return m.OwnerDisplayName
	}
	return ""
}

func (m *Bucket) GetAcl() *ACL {
	if m != nil {
		return m.Acl
	}
	return nil
}

func (m *Bucket) GetCreationDate() int64 {
	if m != nil {
		return m.CreationDate
	}
	return 0
}

func (m *Bucket) GetTransient() bool {
	if m != nil {
		return m.Transient
	}
	return false
}

func (m *Bucket) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *Bucket) GetServerSideEncryption() *ServerSideEncryption {
	if m != nil {
		return m.ServerSideEncryption
	}
	return nil
}

func (m *Bucket) GetVersioningConfiguration() *VersioningConfiguration {
	if m != nil {
		return m.VersioningConfiguration
	}
	return nil
}

func (m *Bucket) GetBackend() string {
	if m != nil {
		return m.Backend
	}
	return ""
}

func (m *Bucket) GetWebsiteConfiguration() *WebsiteConfiguration {
	if m != nil {
		return m.WebsiteConfiguration
	}
	return nil
}

func (m *Bucket) GetCors() *CORSConfiguration {
	if m != nil {
		return m.Cors
	}
	return nil
}

func (m *Bucket) GetReplicationConfiguration() *ReplicationConfiguration {
	if m != nil {
		return m.ReplicationConfiguration
	}
	return nil
}

func (m *Bucket) GetLifecycleConfiguration() []*LifecycleRole {
	if m != nil {
		return m.LifecycleConfiguration
	}
	return nil
}

type Partion struct {
	Key          string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	PartNumber   string `protobuf:"bytes,2,opt,name=partNumber" json:"partNumber,omitempty"`
	Size         int64  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	Etag         string `protobuf:"bytes,4,opt,name=etag" json:"etag,omitempty"`
	LastModified int64  `protobuf:"varint,5,opt,name=lastModified" json:"lastModified,omitempty"`
}

func (m *Partion) Reset()                    { *m = Partion{} }
func (m *Partion) String() string            { return proto.CompactTextString(m) }
func (*Partion) ProtoMessage()               {}
func (*Partion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Partion) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Partion) GetPartNumber() string {
	if m != nil {
		return m.PartNumber
	}
	return ""
}

func (m *Partion) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Partion) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

func (m *Partion) GetLastModified() int64 {
	if m != nil {
		return m.LastModified
	}
	return 0
}

type Version struct {
	Versionid    string `protobuf:"bytes,1,opt,name=versionid" json:"versionid,omitempty"`
	Etag         string `protobuf:"bytes,2,opt,name=etag" json:"etag,omitempty"`
	IsLatest     string `protobuf:"bytes,3,opt,name=isLatest" json:"isLatest,omitempty"`
	LastModified int64  `protobuf:"varint,4,opt,name=lastModified" json:"lastModified,omitempty"`
	Size         int64  `protobuf:"varint,5,opt,name=size" json:"size,omitempty"`
}

func (m *Version) Reset()                    { *m = Version{} }
func (m *Version) String() string            { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()               {}
func (*Version) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Version) GetVersionid() string {
	if m != nil {
		return m.Versionid
	}
	return ""
}

func (m *Version) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

func (m *Version) GetIsLatest() string {
	if m != nil {
		return m.IsLatest
	}
	return ""
}

func (m *Version) GetLastModified() int64 {
	if m != nil {
		return m.LastModified
	}
	return 0
}

func (m *Version) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type Object struct {
	ObjectKey               string                `protobuf:"bytes,1,opt,name=objectKey" json:"objectKey,omitempty"`
	BucketName              string                `protobuf:"bytes,2,opt,name=bucketName" json:"bucketName,omitempty"`
	Owner                   string                `protobuf:"bytes,3,opt,name=owner" json:"owner,omitempty"`
	OwnerDisplayName        string                `protobuf:"bytes,4,opt,name=ownerDisplayName" json:"ownerDisplayName,omitempty"`
	CacheControl            string                `protobuf:"bytes,5,opt,name=cacheControl" json:"cacheControl,omitempty"`
	ContentDisposition      string                `protobuf:"bytes,6,opt,name=contentDisposition" json:"contentDisposition,omitempty"`
	ContentEncoding         string                `protobuf:"bytes,7,opt,name=contentEncoding" json:"contentEncoding,omitempty"`
	Expires                 string                `protobuf:"bytes,8,opt,name=expires" json:"expires,omitempty"`
	ContentLength           string                `protobuf:"bytes,9,opt,name=contentLength" json:"contentLength,omitempty"`
	ContentType             string                `protobuf:"bytes,10,opt,name=contentType" json:"contentType,omitempty"`
	ContentMd5              string                `protobuf:"bytes,11,opt,name=contentMd5" json:"contentMd5,omitempty"`
	Versions                []*Version            `protobuf:"bytes,12,rep,name=versions" json:"versions,omitempty"`
	StorageClass            string                `protobuf:"bytes,13,opt,name=storageClass" json:"storageClass,omitempty"`
	ServerSideEncryption    *ServerSideEncryption `protobuf:"bytes,14,opt,name=serverSideEncryption" json:"serverSideEncryption,omitempty"`
	WebsiteRedirectLocation string                `protobuf:"bytes,15,opt,name=websiteRedirectLocation" json:"websiteRedirectLocation,omitempty"`
	Acl                     *ACL                  `protobuf:"bytes,16,opt,name=acl" json:"acl,omitempty"`
	Backend                 string                `protobuf:"bytes,17,opt,name=backend" json:"backend,omitempty"`
	IsNull                  string                `protobuf:"bytes,18,opt,name=isNull" json:"isNull,omitempty"`
	IsDeleteMarker          string                `protobuf:"bytes,19,opt,name=isDeleteMarker" json:"isDeleteMarker,omitempty"`
	ReplicationInfo         []*ReplicationInfo    `protobuf:"bytes,20,rep,name=replicationInfo" json:"replicationInfo,omitempty"`
	Size                    int64                 `protobuf:"varint,21,opt,name=size" json:"size,omitempty"`
	Partions                []*Partion            `protobuf:"bytes,22,rep,name=partions" json:"partions,omitempty"`
	Tags                    *Tag                  `protobuf:"bytes,23,opt,name=tags" json:"tags,omitempty"`
}

func (m *Object) Reset()                    { *m = Object{} }
func (m *Object) String() string            { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()               {}
func (*Object) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Object) GetObjectKey() string {
	if m != nil {
		return m.ObjectKey
	}
	return ""
}

func (m *Object) GetBucketName() string {
	if m != nil {
		return m.BucketName
	}
	return ""
}

func (m *Object) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Object) GetOwnerDisplayName() string {
	if m != nil {
		return m.OwnerDisplayName
	}
	return ""
}

func (m *Object) GetCacheControl() string {
	if m != nil {
		return m.CacheControl
	}
	return ""
}

func (m *Object) GetContentDisposition() string {
	if m != nil {
		return m.ContentDisposition
	}
	return ""
}

func (m *Object) GetContentEncoding() string {
	if m != nil {
		return m.ContentEncoding
	}
	return ""
}

func (m *Object) GetExpires() string {
	if m != nil {
		return m.Expires
	}
	return ""
}

func (m *Object) GetContentLength() string {
	if m != nil {
		return m.ContentLength
	}
	return ""
}

func (m *Object) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *Object) GetContentMd5() string {
	if m != nil {
		return m.ContentMd5
	}
	return ""
}

func (m *Object) GetVersions() []*Version {
	if m != nil {
		return m.Versions
	}
	return nil
}

func (m *Object) GetStorageClass() string {
	if m != nil {
		return m.StorageClass
	}
	return ""
}

func (m *Object) GetServerSideEncryption() *ServerSideEncryption {
	if m != nil {
		return m.ServerSideEncryption
	}
	return nil
}

func (m *Object) GetWebsiteRedirectLocation() string {
	if m != nil {
		return m.WebsiteRedirectLocation
	}
	return ""
}

func (m *Object) GetAcl() *ACL {
	if m != nil {
		return m.Acl
	}
	return nil
}

func (m *Object) GetBackend() string {
	if m != nil {
		return m.Backend
	}
	return ""
}

func (m *Object) GetIsNull() string {
	if m != nil {
		return m.IsNull
	}
	return ""
}

func (m *Object) GetIsDeleteMarker() string {
	if m != nil {
		return m.IsDeleteMarker
	}
	return ""
}

func (m *Object) GetReplicationInfo() []*ReplicationInfo {
	if m != nil {
		return m.ReplicationInfo
	}
	return nil
}

func (m *Object) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Object) GetPartions() []*Partion {
	if m != nil {
		return m.Partions
	}
	return nil
}

func (m *Object) GetTags() *Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ListBucketsResponse struct {
	Buckets []*Bucket `protobuf:"bytes,1,rep,name=buckets" json:"buckets,omitempty"`
}

func (m *ListBucketsResponse) Reset()                    { *m = ListBucketsResponse{} }
func (m *ListBucketsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListBucketsResponse) ProtoMessage()               {}
func (*ListBucketsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ListBucketsResponse) GetBuckets() []*Bucket {
	if m != nil {
		return m.Buckets
	}
	return nil
}

type BaseResponse struct {
	ErrorCode string `protobuf:"bytes,1,opt,name=errorCode" json:"errorCode,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *BaseResponse) Reset()                    { *m = BaseResponse{} }
func (m *BaseResponse) String() string            { return proto.CompactTextString(m) }
func (*BaseResponse) ProtoMessage()               {}
func (*BaseResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *BaseResponse) GetErrorCode() string {
	if m != nil {
		return m.ErrorCode
	}
	return ""
}

func (m *BaseResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type BaseRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *BaseRequest) Reset()                    { *m = BaseRequest{} }
func (m *BaseRequest) String() string            { return proto.CompactTextString(m) }
func (*BaseRequest) ProtoMessage()               {}
func (*BaseRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *BaseRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListObjectsRequest struct {
	// Bucket is a required field
	Bucket    string `protobuf:"bytes,1,opt,name=Bucket" json:"Bucket,omitempty"`
	Delimiter string `protobuf:"bytes,2,opt,name=Delimiter" json:"Delimiter,omitempty"`
	Owner     string `protobuf:"bytes,3,opt,name=Owner" json:"Owner,omitempty"`
}

func (m *ListObjectsRequest) Reset()                    { *m = ListObjectsRequest{} }
func (m *ListObjectsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListObjectsRequest) ProtoMessage()               {}
func (*ListObjectsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ListObjectsRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *ListObjectsRequest) GetDelimiter() string {
	if m != nil {
		return m.Delimiter
	}
	return ""
}

func (m *ListObjectsRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type ListObjectResponse struct {
	ListObjects []*Object `protobuf:"bytes,1,rep,name=ListObjects" json:"ListObjects,omitempty"`
}

func (m *ListObjectResponse) Reset()                    { *m = ListObjectResponse{} }
func (m *ListObjectResponse) String() string            { return proto.CompactTextString(m) }
func (*ListObjectResponse) ProtoMessage()               {}
func (*ListObjectResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ListObjectResponse) GetListObjects() []*Object {
	if m != nil {
		return m.ListObjects
	}
	return nil
}

type DeleteObjectInput struct {
	Bucket    string `protobuf:"bytes,1,opt,name=Bucket" json:"Bucket,omitempty"`
	Key       string `protobuf:"bytes,2,opt,name=Key" json:"Key,omitempty"`
	Versionid string `protobuf:"bytes,3,opt,name=Versionid" json:"Versionid,omitempty"`
}

func (m *DeleteObjectInput) Reset()                    { *m = DeleteObjectInput{} }
func (m *DeleteObjectInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteObjectInput) ProtoMessage()               {}
func (*DeleteObjectInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *DeleteObjectInput) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *DeleteObjectInput) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DeleteObjectInput) GetVersionid() string {
	if m != nil {
		return m.Versionid
	}
	return ""
}

type GetObjectInput struct {
	Bucket    string `protobuf:"bytes,1,opt,name=Bucket" json:"Bucket,omitempty"`
	Key       string `protobuf:"bytes,2,opt,name=Key" json:"Key,omitempty"`
	Versionid string `protobuf:"bytes,3,opt,name=Versionid" json:"Versionid,omitempty"`
}

func (m *GetObjectInput) Reset()                    { *m = GetObjectInput{} }
func (m *GetObjectInput) String() string            { return proto.CompactTextString(m) }
func (*GetObjectInput) ProtoMessage()               {}
func (*GetObjectInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *GetObjectInput) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *GetObjectInput) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GetObjectInput) GetVersionid() string {
	if m != nil {
		return m.Versionid
	}
	return ""
}

type MultipartUpload struct {
	Bucket   string `protobuf:"bytes,1,opt,name=Bucket" json:"Bucket,omitempty"`
	Key      string `protobuf:"bytes,2,opt,name=Key" json:"Key,omitempty"`
	UploadId string `protobuf:"bytes,3,opt,name=uploadId" json:"uploadId,omitempty"`
}

func (m *MultipartUpload) Reset()                    { *m = MultipartUpload{} }
func (m *MultipartUpload) String() string            { return proto.CompactTextString(m) }
func (*MultipartUpload) ProtoMessage()               {}
func (*MultipartUpload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *MultipartUpload) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *MultipartUpload) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MultipartUpload) GetUploadId() string {
	if m != nil {
		return m.UploadId
	}
	return ""
}

func init() {
	proto.RegisterType((*ACL)(nil), "ACL")
	proto.RegisterType((*ServerSideEncryption)(nil), "ServerSideEncryption")
	proto.RegisterType((*VersioningConfiguration)(nil), "VersioningConfiguration")
	proto.RegisterType((*RedirectAllRequestsTo)(nil), "RedirectAllRequestsTo")
	proto.RegisterType((*Redirect)(nil), "Redirect")
	proto.RegisterType((*Condition)(nil), "Condition")
	proto.RegisterType((*RoutingRules)(nil), "RoutingRules")
	proto.RegisterType((*WebsiteConfiguration)(nil), "WebsiteConfiguration")
	proto.RegisterType((*CORSConfiguration)(nil), "CORSConfiguration")
	proto.RegisterType((*Destination)(nil), "Destination")
	proto.RegisterType((*ReplicationRole)(nil), "ReplicationRole")
	proto.RegisterType((*ReplicationConfiguration)(nil), "ReplicationConfiguration")
	proto.RegisterType((*Tag)(nil), "Tag")
	proto.RegisterType((*LifecycleFilter)(nil), "LifecycleFilter")
	proto.RegisterType((*Action)(nil), "Action")
	proto.RegisterType((*LifecycleRole)(nil), "LifecycleRole")
	proto.RegisterType((*ReplicationInfo)(nil), "ReplicationInfo")
	proto.RegisterType((*Bucket)(nil), "Bucket")
	proto.RegisterType((*Partion)(nil), "Partion")
	proto.RegisterType((*Version)(nil), "Version")
	proto.RegisterType((*Object)(nil), "Object")
	proto.RegisterType((*ListBucketsResponse)(nil), "ListBucketsResponse")
	proto.RegisterType((*BaseResponse)(nil), "BaseResponse")
	proto.RegisterType((*BaseRequest)(nil), "BaseRequest")
	proto.RegisterType((*ListObjectsRequest)(nil), "ListObjectsRequest")
	proto.RegisterType((*ListObjectResponse)(nil), "ListObjectResponse")
	proto.RegisterType((*DeleteObjectInput)(nil), "DeleteObjectInput")
	proto.RegisterType((*GetObjectInput)(nil), "GetObjectInput")
	proto.RegisterType((*MultipartUpload)(nil), "MultipartUpload")
}

func init() { proto.RegisterFile("s3.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1794 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcd, 0x73, 0x1b, 0x49,
	0x15, 0x8f, 0x2c, 0x59, 0xd6, 0x3c, 0xc9, 0x1f, 0xe9, 0x28, 0xca, 0xac, 0xd7, 0x40, 0x76, 0x2a,
	0x04, 0x2f, 0x87, 0xa9, 0xc2, 0x2e, 0xaa, 0x16, 0x0e, 0x80, 0x56, 0x76, 0x16, 0x57, 0xe4, 0xd8,
	0xd5, 0x76, 0x12, 0xaa, 0x38, 0x84, 0xf6, 0x4c, 0x5b, 0x6a, 0x3c, 0x9a, 0xd1, 0x76, 0xb7, 0x62,
	0x8b, 0x2b, 0x54, 0x71, 0xe4, 0xc2, 0x8d, 0xe2, 0xc2, 0x9f, 0xc3, 0x7f, 0xc0, 0x99, 0x13, 0xff,
	0x05, 0xd5, 0x5f, 0xa3, 0x19, 0x69, 0xc4, 0xb2, 0x87, 0x3d, 0x79, 0xde, 0xaf, 0x5f, 0xbf, 0x8f,
	0x7e, 0x9f, 0x16, 0xb4, 0xc4, 0x71, 0x38, 0xe5, 0x99, 0xcc, 0x82, 0x7f, 0xd4, 0xa0, 0xde, 0x1f,
	0x0c, 0x51, 0x0f, 0x9a, 0x11, 0x49, 0x53, 0x1a, 0xfb, 0xb5, 0xe7, 0xb5, 0x43, 0x0f, 0x5b, 0x0a,
	0x7d, 0x06, 0x9d, 0x57, 0x6f, 0x87, 0xc3, 0x0f, 0x83, 0x8b, 0x37, 0xd7, 0xf8, 0x62, 0xe8, 0x6f,
	0x3c, 0xaf, 0x1f, 0x7a, 0xb8, 0xad, 0x30, 0x0b, 0xa1, 0x2e, 0x6c, 0xbe, 0xc7, 0x67, 0xd7, 0xa7,
	0x7e, 0x5d, 0x9f, 0x19, 0x02, 0x7d, 0x0a, 0x9e, 0xfe, 0xf8, 0xd0, 0x1f, 0x5c, 0xfa, 0x0d, 0x7d,
	0xd2, 0xd2, 0x40, 0x7f, 0x70, 0x89, 0x10, 0x34, 0xf0, 0x69, 0xff, 0xc4, 0xdf, 0xd4, 0xb8, 0xfe,
	0x46, 0x9f, 0x40, 0x4b, 0xfd, 0xd5, 0xfc, 0x4d, 0x8d, 0x6f, 0x29, 0xba, 0x3f, 0xb8, 0x0c, 0xfe,
	0x5a, 0x83, 0xee, 0x15, 0xe5, 0x1f, 0x29, 0xbf, 0x62, 0x31, 0x3d, 0x4d, 0x23, 0x3e, 0x9f, 0x4a,
	0x96, 0xa5, 0xe8, 0x39, 0xb4, 0xf5, 0xf7, 0x55, 0x34, 0xa6, 0x13, 0x6a, 0x4d, 0x2f, 0x42, 0xe8,
	0x00, 0x3c, 0x92, 0x8c, 0x32, 0xce, 0xe4, 0x78, 0xe2, 0x6f, 0xe8, 0xf3, 0x05, 0xa0, 0xee, 0x4f,
	0x88, 0x90, 0x94, 0xbf, 0xa6, 0xf3, 0xb3, 0xd8, 0xaf, 0x9b, 0xfb, 0x05, 0x08, 0xed, 0x43, 0x6b,
	0x42, 0xd2, 0x58, 0x66, 0x7c, 0xee, 0x37, 0x9e, 0xd7, 0x0e, 0x5b, 0x38, 0xa7, 0x83, 0x0b, 0x78,
	0xf6, 0x8e, 0x72, 0xc1, 0xb2, 0x94, 0xa5, 0xa3, 0x41, 0x96, 0xde, 0xb2, 0xd1, 0x8c, 0x13, 0x6d,
	0x58, 0x0f, 0x9a, 0x57, 0x92, 0xc8, 0x99, 0x70, 0xcf, 0x69, 0x28, 0x65, 0xce, 0xf9, 0x2d, 0x39,
	0xa1, 0x09, 0x95, 0xd4, 0x99, 0x93, 0x03, 0xc1, 0x05, 0x3c, 0xc5, 0x34, 0x66, 0x9c, 0x46, 0xb2,
	0x9f, 0x24, 0x98, 0x7e, 0x3d, 0xa3, 0x42, 0x8a, 0xeb, 0x4c, 0x59, 0x31, 0xce, 0x84, 0x7c, 0x43,
	0x72, 0x27, 0x73, 0x5a, 0x9d, 0xe9, 0x50, 0x46, 0x59, 0x62, 0xa3, 0x93, 0xd3, 0xc1, 0x3f, 0x6b,
	0xd0, 0x72, 0x12, 0x4b, 0x8c, 0x56, 0x88, 0xa3, 0x4b, 0x0a, 0x36, 0x96, 0x14, 0x1c, 0x41, 0x97,
	0xd3, 0x69, 0x42, 0x22, 0xfa, 0x9a, 0xce, 0x2f, 0x39, 0xbd, 0x65, 0x0f, 0xef, 0x99, 0x1c, 0xdb,
	0xd7, 0xaa, 0x3c, 0x43, 0x2f, 0x61, 0x67, 0x81, 0x6b, 0xee, 0x86, 0xe6, 0x5e, 0x42, 0xd1, 0x8f,
	0x61, 0x6f, 0x2c, 0xe5, 0xd4, 0xd9, 0x38, 0xc8, 0x62, 0xea, 0x6f, 0x6a, 0xce, 0x15, 0x3c, 0xb8,
	0x07, 0x6f, 0x90, 0xa5, 0x31, 0xd3, 0x0f, 0x7c, 0x08, 0xbb, 0x77, 0x4e, 0xe3, 0xe9, 0xd7, 0x33,
	0x92, 0xb8, 0x97, 0x5e, 0x86, 0xd1, 0xaf, 0xe0, 0x53, 0x25, 0xea, 0x94, 0xf3, 0x8c, 0x2b, 0x39,
	0x98, 0xca, 0x19, 0x4f, 0x69, 0x6c, 0x6f, 0x19, 0x6f, 0xff, 0x17, 0x4b, 0xf0, 0x01, 0x3a, 0x38,
	0x9b, 0x49, 0x96, 0x8e, 0xf0, 0x2c, 0xa1, 0x02, 0xfd, 0x10, 0x5a, 0xdc, 0x1a, 0xa6, 0x95, 0xb6,
	0x8f, 0xbc, 0xd0, 0x59, 0x8a, 0xf3, 0x23, 0x74, 0x08, 0x5e, 0xe4, 0xec, 0xd5, 0x6a, 0xda, 0x47,
	0x10, 0xe6, 0x1e, 0xe0, 0xc5, 0x61, 0xf0, 0xef, 0x1a, 0x74, 0xdf, 0xd3, 0x1b, 0xc1, 0x24, 0x2d,
	0xa7, 0xd1, 0x0b, 0xd8, 0x66, 0x69, 0x4c, 0x1f, 0x4e, 0xb2, 0x68, 0x36, 0xa1, 0xa9, 0xb4, 0x3e,
	0x96, 0x41, 0xc5, 0x45, 0x95, 0xe9, 0x39, 0x97, 0xf1, 0xa9, 0x0c, 0xa2, 0x21, 0x3c, 0xe5, 0x55,
	0xc9, 0xa5, 0xe3, 0xd8, 0x3e, 0xea, 0x85, 0x95, 0xa9, 0x87, 0xab, 0x2f, 0xa1, 0x9f, 0x40, 0x87,
	0x17, 0xde, 0x44, 0x57, 0x78, 0xfb, 0x68, 0x3b, 0x2c, 0x3e, 0x14, 0x2e, 0xb1, 0x04, 0xff, 0xa9,
	0xc1, 0xe3, 0xc1, 0x05, 0xbe, 0x2a, 0xbb, 0xb8, 0x03, 0x1b, 0xcc, 0x35, 0x9d, 0x0d, 0x16, 0xab,
	0xcc, 0x21, 0x49, 0x92, 0xdd, 0xd3, 0xf8, 0x9c, 0xca, 0x71, 0x16, 0xbb, 0x08, 0x2d, 0xa1, 0x05,
	0xbe, 0x0b, 0xce, 0x46, 0x2c, 0x15, 0x36, 0x1f, 0x97, 0xd0, 0x02, 0xdf, 0xaf, 0x29, 0x89, 0x29,
	0x17, 0x2e, 0x13, 0xcb, 0xa8, 0x7a, 0xc4, 0x09, 0x79, 0xe8, 0x8f, 0xe8, 0x15, 0x55, 0x81, 0x11,
	0x36, 0x0d, 0xcb, 0xa0, 0x92, 0x46, 0x1f, 0xa6, 0x99, 0x58, 0x48, 0x6b, 0x1a, 0x69, 0x65, 0x34,
	0x38, 0x83, 0xf6, 0x09, 0x15, 0x92, 0xa5, 0x79, 0x3b, 0xb8, 0x99, 0x45, 0x77, 0xd4, 0x05, 0xd0,
	0x52, 0x28, 0x80, 0x8e, 0x90, 0x19, 0x27, 0x23, 0x3a, 0x48, 0x88, 0x70, 0xae, 0x96, 0xb0, 0xe0,
	0x8f, 0x35, 0xd8, 0xc5, 0x74, 0x9a, 0xb0, 0x48, 0xcb, 0xc2, 0x59, 0x42, 0x57, 0x1e, 0xad, 0x07,
	0xcd, 0xa9, 0xce, 0x79, 0x2b, 0xc1, 0x52, 0xc8, 0x87, 0x2d, 0x9a, 0x92, 0x9b, 0x84, 0x9a, 0xde,
	0xd6, 0xc2, 0x8e, 0x44, 0x21, 0xb4, 0xe3, 0x85, 0x81, 0xfa, 0x4d, 0xda, 0x47, 0x9d, 0xb0, 0x60,
	0x34, 0x2e, 0x32, 0x04, 0xef, 0xc0, 0x2f, 0x18, 0x51, 0x0e, 0x21, 0x82, 0x06, 0xcf, 0x12, 0xd7,
	0x99, 0xf4, 0x37, 0x7a, 0x09, 0x9b, 0x5c, 0x27, 0xc6, 0x86, 0x4e, 0x8c, 0xbd, 0x70, 0xc9, 0x05,
	0x6c, 0x8e, 0x83, 0xcf, 0xa1, 0x7e, 0x4d, 0x46, 0x68, 0x0f, 0xea, 0x77, 0x74, 0x6e, 0x25, 0xa8,
	0x4f, 0x85, 0x7c, 0x24, 0x89, 0xf5, 0x47, 0x7d, 0x06, 0x03, 0xd8, 0x1d, 0xb2, 0x5b, 0x1a, 0xcd,
	0xa3, 0x84, 0xbe, 0x62, 0x89, 0xa4, 0xbc, 0xe0, 0x77, 0x6d, 0xc9, 0xef, 0x86, 0x24, 0x23, 0xa7,
	0xbc, 0x11, 0x5e, 0x93, 0x11, 0xd6, 0x48, 0x80, 0xa1, 0xd9, 0x8f, 0x9c, 0xd5, 0xe9, 0xa2, 0x9f,
	0xea, 0x6f, 0xa5, 0x34, 0x26, 0x73, 0xa7, 0x34, 0x26, 0x73, 0x15, 0xa1, 0x58, 0x37, 0xe7, 0x73,
	0xc2, 0xef, 0x28, 0xb7, 0xc9, 0x53, 0xc2, 0x82, 0x3f, 0xd5, 0x60, 0x3b, 0xb7, 0x6c, 0x5d, 0x7c,
	0x84, 0x19, 0x07, 0x36, 0x3e, 0x86, 0x42, 0x87, 0xd0, 0xbc, 0xd5, 0x9e, 0xd8, 0x22, 0xdc, 0x0b,
	0x97, 0x3c, 0xc4, 0xf6, 0x1c, 0x7d, 0x06, 0x5b, 0x44, 0xdb, 0xed, 0x4a, 0x6d, 0x2b, 0x34, 0x7e,
	0x60, 0x87, 0x07, 0xa3, 0x52, 0x9e, 0x9c, 0xa5, 0xb7, 0x59, 0x41, 0x6f, 0xad, 0xa4, 0xd7, 0x87,
	0xad, 0x1b, 0x12, 0xdd, 0xd1, 0x34, 0xb6, 0x06, 0x39, 0x72, 0x25, 0x23, 0xeb, 0x15, 0x19, 0xf9,
	0xf7, 0x4d, 0x68, 0x7e, 0x69, 0x12, 0xb8, 0xea, 0x11, 0xbb, 0xb0, 0x99, 0xdd, 0xa7, 0x94, 0x5b,
	0xd1, 0x86, 0x50, 0x9d, 0x5e, 0x7f, 0x9c, 0x30, 0x31, 0x4d, 0xc8, 0x5c, 0x4f, 0x1a, 0x23, 0x7c,
	0x05, 0x47, 0x3d, 0xa8, 0x93, 0x28, 0xb1, 0x49, 0xd9, 0x08, 0xfb, 0x83, 0x21, 0x56, 0x80, 0x32,
	0x2e, 0xe2, 0x54, 0xbb, 0x77, 0x42, 0xa4, 0x99, 0x14, 0x75, 0x5c, 0xc2, 0xd4, 0x84, 0x95, 0x9c,
	0xa4, 0x82, 0xa9, 0x46, 0xd8, 0xd4, 0x49, 0xbf, 0x00, 0x94, 0xe3, 0x26, 0x74, 0xb1, 0xbf, 0x65,
	0x0a, 0xc2, 0x92, 0xe8, 0x0c, 0xba, 0xa2, 0x62, 0xc5, 0xf0, 0x5b, 0xda, 0x88, 0xa7, 0x61, 0xd5,
	0xfe, 0x81, 0x2b, 0xaf, 0x20, 0x0c, 0xcf, 0x3e, 0x56, 0xef, 0x05, 0xbe, 0xa7, 0xa5, 0xf9, 0xe1,
	0x9a, 0xbd, 0x01, 0xaf, 0xbb, 0x58, 0x8c, 0x18, 0x94, 0x23, 0x76, 0x06, 0xdd, 0xfb, 0x8a, 0xd9,
	0xe1, 0xb7, 0xad, 0xe1, 0x55, 0x83, 0x05, 0x57, 0x5e, 0x41, 0x2f, 0xa1, 0x11, 0x65, 0x5c, 0xf8,
	0x1d, 0x7d, 0x15, 0x85, 0x2b, 0xdd, 0x1a, 0xeb, 0x73, 0xf4, 0x16, 0x7c, 0xbe, 0xa6, 0x19, 0xf8,
	0xdb, 0xfa, 0xee, 0x27, 0xe1, 0xba, 0x6e, 0x81, 0xd7, 0x5e, 0x45, 0xaf, 0xa0, 0x97, 0xb8, 0xf4,
	0x2f, 0x0b, 0xdd, 0xd1, 0x29, 0xbf, 0x13, 0x96, 0xaa, 0x0c, 0xaf, 0xe1, 0x0e, 0xfe, 0x5c, 0x83,
	0xad, 0x4b, 0xc2, 0xb5, 0xcc, 0xd5, 0xc6, 0xf2, 0x7d, 0x80, 0x29, 0xe1, 0xf2, 0xcd, 0x6c, 0x72,
	0x93, 0xe7, 0x68, 0x01, 0x51, 0x29, 0x2d, 0xd8, 0x1f, 0x4c, 0x72, 0xd6, 0xb1, 0xfe, 0x56, 0x18,
	0x95, 0x64, 0x64, 0xab, 0x5f, 0x7f, 0xab, 0x64, 0x4c, 0x88, 0x90, 0xe7, 0x59, 0xcc, 0x6e, 0x19,
	0x8d, 0x5d, 0x32, 0x16, 0xb1, 0xe0, 0x2f, 0x35, 0xd8, 0xb2, 0xa1, 0x56, 0x89, 0xe9, 0x82, 0xeb,
	0x5a, 0xc3, 0x02, 0xc8, 0x35, 0x6c, 0x14, 0x34, 0xec, 0x43, 0x8b, 0x89, 0x21, 0x91, 0x54, 0x48,
	0x5b, 0x2a, 0x39, 0xbd, 0xa2, 0xbd, 0xb1, 0xaa, 0x3d, 0xf7, 0x64, 0x73, 0xe1, 0x49, 0xf0, 0xaf,
	0x26, 0x34, 0x2f, 0x6e, 0x7e, 0xaf, 0xf6, 0x93, 0x03, 0xf0, 0x32, 0xfd, 0xf5, 0x3a, 0x7f, 0xa0,
	0x05, 0xa0, 0x9e, 0xc9, 0x0c, 0xa9, 0xc2, 0x4e, 0x58, 0x40, 0x16, 0x55, 0x5e, 0xff, 0xa6, 0x2a,
	0x6f, 0xac, 0xa9, 0x72, 0x55, 0xcd, 0x24, 0x1a, 0xab, 0xe0, 0x49, 0x9e, 0x25, 0x76, 0xe0, 0x96,
	0x30, 0x14, 0x02, 0x8a, 0xb2, 0x54, 0xd2, 0x54, 0xaa, 0x9b, 0x99, 0x30, 0xcb, 0x94, 0x99, 0xb9,
	0x15, 0x27, 0x6a, 0x2d, 0xb4, 0xe8, 0x69, 0x1a, 0x65, 0x31, 0x4b, 0x47, 0xba, 0xce, 0x3d, 0xbc,
	0x0c, 0xeb, 0xd1, 0xf8, 0x30, 0x65, 0x9c, 0x0a, 0x5d, 0xe2, 0x1e, 0x76, 0xa4, 0xda, 0x04, 0x2c,
	0xf3, 0x90, 0xa6, 0x23, 0x39, 0xd6, 0x45, 0xeb, 0xe1, 0x32, 0xa8, 0xff, 0xf5, 0x30, 0xc0, 0xf5,
	0x7c, 0x4a, 0x6d, 0x51, 0x16, 0x21, 0xf5, 0x82, 0x96, 0x3c, 0x8f, 0x7f, 0xaa, 0xcb, 0xd1, 0xc3,
	0x05, 0x04, 0xbd, 0x80, 0x96, 0x8d, 0xbf, 0xaa, 0x38, 0x95, 0xe0, 0x2d, 0xd7, 0x17, 0x70, 0x7e,
	0xb2, 0xd2, 0x90, 0xb7, 0x57, 0x1b, 0xf2, 0xda, 0xde, 0xb5, 0xf3, 0xed, 0x7b, 0xd7, 0x17, 0xf0,
	0xcc, 0xb6, 0x06, 0xb7, 0x0e, 0x0e, 0x33, 0x53, 0xab, 0xfe, 0xae, 0xd6, 0xbc, 0xee, 0xd8, 0x35,
	0xed, 0xbd, 0xe5, 0xa6, 0x5d, 0xe8, 0x5c, 0x8f, 0xcb, 0x9d, 0xab, 0x07, 0x4d, 0x26, 0xde, 0xcc,
	0x92, 0xc4, 0x47, 0x66, 0x3a, 0x19, 0x4a, 0x2d, 0x59, 0x4c, 0x9c, 0x14, 0xa7, 0xee, 0x13, 0xb3,
	0x64, 0x95, 0x51, 0xf4, 0x73, 0xd8, 0xe5, 0xe5, 0x81, 0xe7, 0x77, 0x57, 0xb7, 0x0d, 0x85, 0xe3,
	0x65, 0xc6, 0xbc, 0x36, 0x9e, 0x16, 0xaa, 0xfc, 0x05, 0xb4, 0xa6, 0xa6, 0x6d, 0x08, 0xbf, 0x67,
	0x03, 0x62, 0xfb, 0x08, 0xce, 0x4f, 0xf2, 0xdd, 0xe2, 0x99, 0x75, 0x74, 0xb1, 0x5b, 0x7c, 0x01,
	0x4f, 0x86, 0x4c, 0x48, 0x33, 0x1a, 0x05, 0xa6, 0x62, 0x9a, 0xa5, 0x82, 0xaa, 0xd1, 0x6d, 0xea,
	0x46, 0x4d, 0x61, 0x33, 0xba, 0x0d, 0x0b, 0x76, 0x78, 0xf0, 0x0b, 0xe8, 0x7c, 0x49, 0x04, 0xcd,
	0xaf, 0x1c, 0x80, 0x47, 0xdd, 0x3f, 0x23, 0xae, 0x34, 0x73, 0x40, 0xf5, 0xb4, 0x89, 0x70, 0xad,
	0x42, 0x7d, 0x06, 0xdf, 0x83, 0xb6, 0xb9, 0xaf, 0xf7, 0xf3, 0xe5, 0xf5, 0x23, 0xf8, 0x1d, 0x20,
	0x65, 0x98, 0xa9, 0x7b, 0xe1, 0xb8, 0x7a, 0x6e, 0x8a, 0xbb, 0xe5, 0xc0, 0xce, 0xf4, 0x03, 0xf0,
	0x4e, 0x68, 0xc2, 0x26, 0x4c, 0xe6, 0xfd, 0x71, 0x01, 0xa8, 0xba, 0xbf, 0x28, 0xd6, 0xbd, 0x26,
	0x82, 0x5f, 0x16, 0x35, 0xe4, 0x6e, 0x7c, 0x0e, 0xed, 0x82, 0xde, 0xdc, 0x7b, 0xcb, 0x55, 0x3c,
	0x0b, 0x7e, 0x0b, 0x8f, 0x4d, 0x6c, 0x0d, 0x70, 0x96, 0x4e, 0x67, 0xeb, 0x2d, 0xdc, 0x83, 0xba,
	0xea, 0x59, 0xf6, 0x01, 0x54, 0xb7, 0x3a, 0x00, 0xef, 0x5d, 0xde, 0x5c, 0x8d, 0x65, 0x0b, 0x20,
	0xf8, 0x0d, 0xec, 0x7c, 0x45, 0xe5, 0x77, 0x21, 0xf9, 0x3d, 0xec, 0x9e, 0xcf, 0x12, 0xc9, 0x54,
	0x76, 0xbc, 0x9d, 0x26, 0x19, 0x89, 0xbf, 0x85, 0xe8, 0x7d, 0x68, 0xcd, 0xf4, 0x9d, 0xfc, 0xa7,
	0x87, 0x9c, 0x3e, 0xfa, 0x5b, 0x1d, 0x36, 0xae, 0x8e, 0xd1, 0xb1, 0x79, 0x41, 0x9b, 0x52, 0xa8,
	0x13, 0x16, 0xc2, 0xbc, 0xdf, 0x0d, 0x2b, 0xd2, 0x2d, 0x78, 0x84, 0x0e, 0xa1, 0x33, 0x50, 0x2b,
	0x11, 0xb5, 0x9a, 0x5d, 0xbe, 0xed, 0x6f, 0x87, 0xc5, 0x2c, 0x33, 0x9c, 0xe6, 0xd5, 0xbf, 0x91,
	0xf3, 0x07, 0xe0, 0x7d, 0x45, 0xe5, 0x32, 0x9b, 0xfb, 0x08, 0x1e, 0xa1, 0x9f, 0x95, 0x62, 0x8d,
	0x9e, 0x84, 0xab, 0x19, 0xb7, 0x5f, 0x04, 0xab, 0xec, 0xb5, 0x83, 0xc9, 0x65, 0x48, 0xa5, 0xbd,
	0x6f, 0xa7, 0xf1, 0xff, 0xc3, 0xf9, 0x23, 0x6d, 0xaf, 0x65, 0xdb, 0x0d, 0xcb, 0xe1, 0xdf, 0x77,
	0xf7, 0x82, 0x47, 0xe8, 0xd8, 0x3d, 0x81, 0xe5, 0x45, 0xe1, 0x4a, 0x1e, 0xae, 0x48, 0xbf, 0x69,
	0xea, 0x1f, 0x4e, 0x8e, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xd9, 0xdd, 0x66, 0xb2, 0x48, 0x13,
	0x00, 0x00,
}
