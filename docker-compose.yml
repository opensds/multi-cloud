version: '2'

services:

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  api:
    image: opensdsio/multi-cloud-api
    volumes:
      - /etc/ssl/certs:/etc/ssl/certs
    ports:
      - 8089:8089
    environment:
      MICRO_SERVER_ADDRESS: ":8089"
      MICRO_REGISTRY: "mdns"
      AUTH_AuthStrategy: "noauth"
      AuthUrl: "http://10.10.3.100/identity"
      UserDomainName: "Default"
      Username: "opensds"
      Password: "opensds@123"
      ProjectName: "service"

  backend:
    image: opensdsio/multi-cloud-backend
    environment:
      MICRO_REGISTRY: "mdns"
      DB_HOST: "datastore:27017"

  s3:
    image: opensdsio/multi-cloud-s3
    environment:
      MICRO_REGISTRY: "mdns"
      DB_HOST: "datastore:27017"

  dataflow:
    image: opensdsio/multi-cloud-dataflow
    environment:
      MICRO_REGISTRY: "mdns"
      DB_HOST: "datastore:27017"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
    depends_on:
      - zookeeper
      - kafka

  datamover:
    image: opensdsio/multi-cloud-datamover
    volumes:
      - /etc/ssl/certs:/etc/ssl/certs
    environment:
      MICRO_REGISTRY: "mdns"
      DB_HOST: "datastore:27017"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
    depends_on:
      - zookeeper
      - kafka

  datastore:
    image: mongo
    ports:
      - 27017:27017
